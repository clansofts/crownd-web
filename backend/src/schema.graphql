# import * from './generated/prisma.graphql'

type SuccessMessage {
  message: String
}

type Post {
  id: ID!
  caption: String
  image: String
  video: String
  author: User!
  likes: [Like!]!
}

type User {
  id: ID!
  name: String!
  username: String!
  profilePicture: String!
  website: String
  bio: String
  email: String!
  phoneNumber: Int
  gender: Gender!
  following: [User!]!
  followers: [User!]!
  likes: [Like!]!
  posts: [Post!]!
  permissions: [Permission!]!
}

type Query {
  currentUser: User
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, first: Int ): [User!]!
  userz: [User!]! # Just for testing
  user(id: ID!): User
  posts: [Post!]!
  post(id: ID!): Post
  feed(id: ID!): [Post!]!
  likedPosts(id: ID!): [Post!]!
}

type Mutation {
  signup(name: String!, username: String!, email: String!, password: String!): User!
  signin(username: String!, password: String!): User!
  signout: SuccessMessage
  follow(id: ID!): User!
  unfollow(id: ID!): User!
  createPost(image: String, largeImage: String, caption: String): Post!
  likePost(id: ID!): Like!
  unlikePost(id: ID!): Like!
}
